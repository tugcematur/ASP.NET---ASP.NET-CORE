01
List<Personel> liste = new List<Personel>()
02
{
03
    new Personel() { Ad="Mehmet", Yasi = 23 },
04
 
05
    new Personel() { Ad="Fatma", Yasi = 22 },
06
 
07
    new Personel() { Ad="Mustafa", Yasi = 20 },
08
 
09
    new Personel() { Ad="Ayşe", Yasi = 21 },
10
};
11
 
12
public class Personel
13
{
14
    public string Ad { get; set; }
15
 
16
    public int Yasi { get; set; }
17
}
 

* Where Kullanımı
Liste üzerinde verilen koşula göre değerleri getirir.

1
liste.Where(x => x.Ad == "Mehmet").ToList();
2
//Adı "Mehmet" olanların listesini getirir.
 
* Select Kullanımı
İstenilen kolonların getirilmesini sağlar.

1
liste.Where(x => x.Ad == "Fatma").Select(x => x.Yasi).ToList();
2
//Adı "Fatma" olanların yaşını getirir.
 
* OrderBy ve OrderByDescending Kullanımı
OrderBy, küçükten büyüğe doğru yani artan sıralama yapar, OrderByDescending ise tam tersi sıralama yapar yani büyükten küçüğe doğru sıralar, azalan sıralama yapar.

1
liste.OrderBy(x => x.Yasi).ToList();
2
//Yaşa göre sıralama yapar, sırasıyla 20,21,22,23 olanları getirir. (Artan sıralama)
 
* Skip Kullanımı
Liste üzerinde istediğimiz satır sayısı kadar atlama yapar. Örneğin Skip(3) dediğimizde 0. 1. ve 2. elemanları atlar ve direk 3.elemandan başlar.

1
liste.OrderBy(x => x.Yasi).Skip(3).ToList();
2
//Burada yaşa göre sıralama yapar, sonuç ise yaşı 20,21 ve 22 olanları atladığı için 23 Mehmet'dir.
 
* Take Kullanımı
Liste üzerindeki en baştan istenilen eleman sayısını almamızı sağlar. SQL’deki select top… gibi düşünebiliriz.

1
liste.Where(x => x.Ad.Contains("a")).Take(1).ToList();
2
//Burada adında "a" içeren elemanları getir dedik, normalde "Fatma" ve "Mustafa" gelicekti, ama Take(1) dediğimiz için yalnızca "Fatma" gelecek.
 
* Any Kullanımı
Geriye bool tipinde değer döndürür, şartı sağlayan kayıt varsa true, yoksa false döndürür.

1
liste.Any(x => x.Ad == "Ayşe"); //Kayıt var olduğu için True değeri döner.
 
Bu kullanımlara ek olarak ekstra bazı sorgularda göstermek istiyorum,

1
liste.Where(p => p.Yasi > 21).OrderBy(p => p.Ad).Select(p => p.Ad).ToList();
2
//Yaşı 21'den büyük olanların isimlerini sıralar ve sadece isimlerini getirir.
1
liste.FirstOrDefault(p => p.Yasi == 23).Ad;
2
//Yaşı 23 olan personelin Adını getirir. Sonuç "Mehmet" olarak geri döner.
1
liste.Where(p => p.Ad.Contains("e")).ToList();
2
//Adında "e" harfi geçenleri listeler, sonuç size "Mehmet" ve "Ayşe" olarak gelir.
1
liste.Where(p => p.Ad.StartsWith("M")).ToList();
2
//Adı "M" ile başlayanları getirir. Sonuç size "Mehmet" ve "Mustafa" olarak gelir.
1
liste.Sum(p => p.Yasi); //Liste üzerindeki bütün yaşları toplar, geriye "86" sonucu döner.
1
liste.Where(x => x.Yasi == liste.Max(y => y.Yasi)).Select(p => p.Ad).FirstOrDefault(); //Yaşı Max olan personelin ismini getirir, sonuç "Mehmet" olarak geri döner.
1
liste.Find(p => p.Yasi == 21).Ad; //Yaşı 21 olan kişinin adını getirir. Sonuç "Ayşe" olarak geri döner.
 